// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="sandbox,hls_ip_2014_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=6.666670,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=5.681000,HLS_SYN_LAT=2081283,HLS_SYN_TPT=2081284,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=489,HLS_SYN_LUT=754}" *)

module sandbox (
        s_axi_CONTROL_BUS_AWVALID,
        s_axi_CONTROL_BUS_AWREADY,
        s_axi_CONTROL_BUS_AWADDR,
        s_axi_CONTROL_BUS_WVALID,
        s_axi_CONTROL_BUS_WREADY,
        s_axi_CONTROL_BUS_WDATA,
        s_axi_CONTROL_BUS_WSTRB,
        s_axi_CONTROL_BUS_ARVALID,
        s_axi_CONTROL_BUS_ARREADY,
        s_axi_CONTROL_BUS_ARADDR,
        s_axi_CONTROL_BUS_RVALID,
        s_axi_CONTROL_BUS_RREADY,
        s_axi_CONTROL_BUS_RDATA,
        s_axi_CONTROL_BUS_RRESP,
        s_axi_CONTROL_BUS_BVALID,
        s_axi_CONTROL_BUS_BREADY,
        s_axi_CONTROL_BUS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        video_in_TDATA,
        video_in_TKEEP,
        video_in_TSTRB,
        video_in_TUSER,
        video_in_TLAST,
        video_in_TID,
        video_in_TDEST,
        video_out_TDATA,
        video_out_TKEEP,
        video_out_TSTRB,
        video_out_TUSER,
        video_out_TLAST,
        video_out_TID,
        video_out_TDEST,
        video_in_TVALID,
        video_in_TREADY,
        video_out_TVALID,
        video_out_TREADY
);

parameter    C_S_AXI_CONTROL_BUS_DATA_WIDTH = 32;
parameter    ap_const_int64_8 = 8;
parameter    C_S_AXI_CONTROL_BUS_ADDR_WIDTH = 6;
parameter    C_DATA_WIDTH = 32;
parameter    C_ADDR_WIDTH = 32;
parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_lv24_0 = 24'b000000000000000000000000;
parameter    ap_const_lv3_0 = 3'b000;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_true = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    C_S_AXI_CONTROL_BUS_WSTRB_WIDTH = (C_S_AXI_CONTROL_BUS_DATA_WIDTH / ap_const_int64_8);
parameter    C_WSTRB_WIDTH = (C_DATA_WIDTH / ap_const_int64_8);

input   s_axi_CONTROL_BUS_AWVALID;
output   s_axi_CONTROL_BUS_AWREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CONTROL_BUS_AWADDR;
input   s_axi_CONTROL_BUS_WVALID;
output   s_axi_CONTROL_BUS_WREADY;
input  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1 : 0] s_axi_CONTROL_BUS_WDATA;
input  [C_S_AXI_CONTROL_BUS_WSTRB_WIDTH - 1 : 0] s_axi_CONTROL_BUS_WSTRB;
input   s_axi_CONTROL_BUS_ARVALID;
output   s_axi_CONTROL_BUS_ARREADY;
input  [C_S_AXI_CONTROL_BUS_ADDR_WIDTH - 1 : 0] s_axi_CONTROL_BUS_ARADDR;
output   s_axi_CONTROL_BUS_RVALID;
input   s_axi_CONTROL_BUS_RREADY;
output  [C_S_AXI_CONTROL_BUS_DATA_WIDTH - 1 : 0] s_axi_CONTROL_BUS_RDATA;
output  [1:0] s_axi_CONTROL_BUS_RRESP;
output   s_axi_CONTROL_BUS_BVALID;
input   s_axi_CONTROL_BUS_BREADY;
output  [1:0] s_axi_CONTROL_BUS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [23:0] video_in_TDATA;
input  [2:0] video_in_TKEEP;
input  [2:0] video_in_TSTRB;
input  [0:0] video_in_TUSER;
input  [0:0] video_in_TLAST;
input  [0:0] video_in_TID;
input  [0:0] video_in_TDEST;
output  [23:0] video_out_TDATA;
output  [2:0] video_out_TKEEP;
output  [2:0] video_out_TSTRB;
output  [0:0] video_out_TUSER;
output  [0:0] video_out_TLAST;
output  [0:0] video_out_TID;
output  [0:0] video_out_TDEST;
input   video_in_TVALID;
output   video_in_TREADY;
output   video_out_TVALID;
input   video_out_TREADY;

reg    ap_rst_n_inv;
wire    sandbox_CONTROL_BUS_s_axi_U_ap_dummy_ce;
wire   [31:0] rows;
wire   [31:0] cols;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
reg    ap_idle;
wire    sandbox_AXIvideo2Mat_U0_ap_start;
wire    sandbox_AXIvideo2Mat_U0_ap_done;
wire    sandbox_AXIvideo2Mat_U0_ap_continue;
wire    sandbox_AXIvideo2Mat_U0_ap_idle;
wire    sandbox_AXIvideo2Mat_U0_ap_ready;
wire   [31:0] sandbox_AXIvideo2Mat_U0_AXI_video_strm_V_data_V_2;
wire    sandbox_AXIvideo2Mat_U0_AXI_video_strm_V_data_V_2_ap_vld;
wire   [23:0] sandbox_AXIvideo2Mat_U0_video_in_TDATA;
wire    sandbox_AXIvideo2Mat_U0_video_in_TVALID;
wire    sandbox_AXIvideo2Mat_U0_video_in_TREADY;
wire   [2:0] sandbox_AXIvideo2Mat_U0_video_in_TKEEP;
wire   [2:0] sandbox_AXIvideo2Mat_U0_video_in_TSTRB;
wire   [0:0] sandbox_AXIvideo2Mat_U0_video_in_TUSER;
wire   [0:0] sandbox_AXIvideo2Mat_U0_video_in_TLAST;
wire   [0:0] sandbox_AXIvideo2Mat_U0_video_in_TID;
wire   [0:0] sandbox_AXIvideo2Mat_U0_video_in_TDEST;
wire   [7:0] sandbox_AXIvideo2Mat_U0_img_data_stream_0_V_din;
wire    sandbox_AXIvideo2Mat_U0_img_data_stream_0_V_full_n;
wire    sandbox_AXIvideo2Mat_U0_img_data_stream_0_V_write;
wire   [7:0] sandbox_AXIvideo2Mat_U0_img_data_stream_1_V_din;
wire    sandbox_AXIvideo2Mat_U0_img_data_stream_1_V_full_n;
wire    sandbox_AXIvideo2Mat_U0_img_data_stream_1_V_write;
wire   [7:0] sandbox_AXIvideo2Mat_U0_img_data_stream_2_V_din;
wire    sandbox_AXIvideo2Mat_U0_img_data_stream_2_V_full_n;
wire    sandbox_AXIvideo2Mat_U0_img_data_stream_2_V_write;
wire    sandbox_AXIvideo2Mat_U0_img_data_stream_0_V_ap_vld;
wire    sandbox_AXIvideo2Mat_U0_img_data_stream_1_V_ap_vld;
wire    sandbox_AXIvideo2Mat_U0_img_data_stream_2_V_ap_vld;
wire    ap_chn_write_sandbox_AXIvideo2Mat_U0_result_channel;
wire    result_channel_full_n;
wire    sandbox_Block_proc_U0_ap_start;
wire    sandbox_Block_proc_U0_ap_done;
wire    sandbox_Block_proc_U0_ap_continue;
wire    sandbox_Block_proc_U0_ap_idle;
wire    sandbox_Block_proc_U0_ap_ready;
wire   [31:0] sandbox_Block_proc_U0_result;
wire   [23:0] sandbox_Block_proc_U0_video_out_TDATA;
wire    sandbox_Block_proc_U0_video_out_TVALID;
wire    sandbox_Block_proc_U0_video_out_TREADY;
wire   [2:0] sandbox_Block_proc_U0_video_out_TKEEP;
wire   [2:0] sandbox_Block_proc_U0_video_out_TSTRB;
wire   [0:0] sandbox_Block_proc_U0_video_out_TUSER;
wire   [0:0] sandbox_Block_proc_U0_video_out_TLAST;
wire   [0:0] sandbox_Block_proc_U0_video_out_TID;
wire   [0:0] sandbox_Block_proc_U0_video_out_TDEST;
wire    ap_sig_hs_continue;
wire    result_channel_U_ap_dummy_ce;
wire   [31:0] result_channel_din;
wire    result_channel_write;
wire   [31:0] result_channel_dout;
wire    result_channel_empty_n;
wire    result_channel_read;
reg    ap_reg_procdone_sandbox_AXIvideo2Mat_U0 = 1'b0;
reg    ap_sig_hs_done;
reg    ap_reg_procdone_sandbox_Block_proc_U0 = 1'b0;
reg    ap_CS;
wire    ap_sig_top_allready;


sandbox_CONTROL_BUS_s_axi #(
    .C_ADDR_WIDTH( C_S_AXI_CONTROL_BUS_ADDR_WIDTH ),
    .C_DATA_WIDTH( C_S_AXI_CONTROL_BUS_DATA_WIDTH ))
sandbox_CONTROL_BUS_s_axi_U(
    .AWVALID( s_axi_CONTROL_BUS_AWVALID ),
    .AWREADY( s_axi_CONTROL_BUS_AWREADY ),
    .AWADDR( s_axi_CONTROL_BUS_AWADDR ),
    .WVALID( s_axi_CONTROL_BUS_WVALID ),
    .WREADY( s_axi_CONTROL_BUS_WREADY ),
    .WDATA( s_axi_CONTROL_BUS_WDATA ),
    .WSTRB( s_axi_CONTROL_BUS_WSTRB ),
    .ARVALID( s_axi_CONTROL_BUS_ARVALID ),
    .ARREADY( s_axi_CONTROL_BUS_ARREADY ),
    .ARADDR( s_axi_CONTROL_BUS_ARADDR ),
    .RVALID( s_axi_CONTROL_BUS_RVALID ),
    .RREADY( s_axi_CONTROL_BUS_RREADY ),
    .RDATA( s_axi_CONTROL_BUS_RDATA ),
    .RRESP( s_axi_CONTROL_BUS_RRESP ),
    .BVALID( s_axi_CONTROL_BUS_BVALID ),
    .BREADY( s_axi_CONTROL_BUS_BREADY ),
    .BRESP( s_axi_CONTROL_BUS_BRESP ),
    .ACLK( ap_clk ),
    .ARESET( ap_rst_n_inv ),
    .ACLK_EN( sandbox_CONTROL_BUS_s_axi_U_ap_dummy_ce ),
    .rows( rows ),
    .cols( cols ),
    .ap_start( ap_start ),
    .interrupt( interrupt ),
    .ap_ready( ap_ready ),
    .ap_done( ap_done ),
    .ap_idle( ap_idle )
);

sandbox_AXIvideo2Mat sandbox_AXIvideo2Mat_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( sandbox_AXIvideo2Mat_U0_ap_start ),
    .ap_done( sandbox_AXIvideo2Mat_U0_ap_done ),
    .ap_continue( sandbox_AXIvideo2Mat_U0_ap_continue ),
    .ap_idle( sandbox_AXIvideo2Mat_U0_ap_idle ),
    .ap_ready( sandbox_AXIvideo2Mat_U0_ap_ready ),
    .AXI_video_strm_V_data_V_2( sandbox_AXIvideo2Mat_U0_AXI_video_strm_V_data_V_2 ),
    .AXI_video_strm_V_data_V_2_ap_vld( sandbox_AXIvideo2Mat_U0_AXI_video_strm_V_data_V_2_ap_vld ),
    .video_in_TDATA( sandbox_AXIvideo2Mat_U0_video_in_TDATA ),
    .video_in_TVALID( sandbox_AXIvideo2Mat_U0_video_in_TVALID ),
    .video_in_TREADY( sandbox_AXIvideo2Mat_U0_video_in_TREADY ),
    .video_in_TKEEP( sandbox_AXIvideo2Mat_U0_video_in_TKEEP ),
    .video_in_TSTRB( sandbox_AXIvideo2Mat_U0_video_in_TSTRB ),
    .video_in_TUSER( sandbox_AXIvideo2Mat_U0_video_in_TUSER ),
    .video_in_TLAST( sandbox_AXIvideo2Mat_U0_video_in_TLAST ),
    .video_in_TID( sandbox_AXIvideo2Mat_U0_video_in_TID ),
    .video_in_TDEST( sandbox_AXIvideo2Mat_U0_video_in_TDEST ),
    .img_data_stream_0_V_din( sandbox_AXIvideo2Mat_U0_img_data_stream_0_V_din ),
    .img_data_stream_0_V_full_n( sandbox_AXIvideo2Mat_U0_img_data_stream_0_V_full_n ),
    .img_data_stream_0_V_write( sandbox_AXIvideo2Mat_U0_img_data_stream_0_V_write ),
    .img_data_stream_1_V_din( sandbox_AXIvideo2Mat_U0_img_data_stream_1_V_din ),
    .img_data_stream_1_V_full_n( sandbox_AXIvideo2Mat_U0_img_data_stream_1_V_full_n ),
    .img_data_stream_1_V_write( sandbox_AXIvideo2Mat_U0_img_data_stream_1_V_write ),
    .img_data_stream_2_V_din( sandbox_AXIvideo2Mat_U0_img_data_stream_2_V_din ),
    .img_data_stream_2_V_full_n( sandbox_AXIvideo2Mat_U0_img_data_stream_2_V_full_n ),
    .img_data_stream_2_V_write( sandbox_AXIvideo2Mat_U0_img_data_stream_2_V_write ),
    .img_data_stream_0_V_ap_vld( sandbox_AXIvideo2Mat_U0_img_data_stream_0_V_ap_vld ),
    .img_data_stream_1_V_ap_vld( sandbox_AXIvideo2Mat_U0_img_data_stream_1_V_ap_vld ),
    .img_data_stream_2_V_ap_vld( sandbox_AXIvideo2Mat_U0_img_data_stream_2_V_ap_vld )
);

sandbox_Block_proc sandbox_Block_proc_U0(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst_n_inv ),
    .ap_start( sandbox_Block_proc_U0_ap_start ),
    .ap_done( sandbox_Block_proc_U0_ap_done ),
    .ap_continue( sandbox_Block_proc_U0_ap_continue ),
    .ap_idle( sandbox_Block_proc_U0_ap_idle ),
    .ap_ready( sandbox_Block_proc_U0_ap_ready ),
    .result( sandbox_Block_proc_U0_result ),
    .video_out_TDATA( sandbox_Block_proc_U0_video_out_TDATA ),
    .video_out_TVALID( sandbox_Block_proc_U0_video_out_TVALID ),
    .video_out_TREADY( sandbox_Block_proc_U0_video_out_TREADY ),
    .video_out_TKEEP( sandbox_Block_proc_U0_video_out_TKEEP ),
    .video_out_TSTRB( sandbox_Block_proc_U0_video_out_TSTRB ),
    .video_out_TUSER( sandbox_Block_proc_U0_video_out_TUSER ),
    .video_out_TLAST( sandbox_Block_proc_U0_video_out_TLAST ),
    .video_out_TID( sandbox_Block_proc_U0_video_out_TID ),
    .video_out_TDEST( sandbox_Block_proc_U0_video_out_TDEST )
);

FIFO_sandbox_result_channel result_channel_U(
    .clk( ap_clk ),
    .reset( ap_rst_n_inv ),
    .if_read_ce( result_channel_U_ap_dummy_ce ),
    .if_write_ce( result_channel_U_ap_dummy_ce ),
    .if_din( result_channel_din ),
    .if_full_n( result_channel_full_n ),
    .if_write( result_channel_write ),
    .if_dout( result_channel_dout ),
    .if_empty_n( result_channel_empty_n ),
    .if_read( result_channel_read )
);



/// ap_reg_procdone_sandbox_AXIvideo2Mat_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_sandbox_AXIvideo2Mat_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_sandbox_AXIvideo2Mat_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_sandbox_AXIvideo2Mat_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == sandbox_AXIvideo2Mat_U0_ap_done)) begin
            ap_reg_procdone_sandbox_AXIvideo2Mat_U0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_procdone_sandbox_Block_proc_U0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_procdone_sandbox_Block_proc_U0
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_procdone_sandbox_Block_proc_U0 <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_sig_hs_done)) begin
            ap_reg_procdone_sandbox_Block_proc_U0 <= ap_const_logic_0;
        end else if ((ap_const_logic_1 == sandbox_Block_proc_U0_ap_done)) begin
            ap_reg_procdone_sandbox_Block_proc_U0 <= ap_const_logic_1;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    ap_CS <= ap_const_logic_0;
end

/// ap_idle assign process. ///
always @ (sandbox_AXIvideo2Mat_U0_ap_idle or sandbox_Block_proc_U0_ap_idle or result_channel_empty_n)
begin
    if (((ap_const_logic_1 == sandbox_AXIvideo2Mat_U0_ap_idle) & (ap_const_logic_1 == sandbox_Block_proc_U0_ap_idle) & (result_channel_empty_n == ap_const_logic_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_sig_hs_done assign process. ///
always @ (sandbox_Block_proc_U0_ap_done)
begin
    if ((ap_const_logic_1 == sandbox_Block_proc_U0_ap_done)) begin
        ap_sig_hs_done = ap_const_logic_1;
    end else begin
        ap_sig_hs_done = ap_const_logic_0;
    end
end
assign ap_chn_write_sandbox_AXIvideo2Mat_U0_result_channel = sandbox_AXIvideo2Mat_U0_ap_done;
assign ap_done = ap_sig_hs_done;
assign ap_ready = ap_sig_top_allready;

/// ap_rst_n_inv assign process. ///
always @ (ap_rst_n)
begin
    ap_rst_n_inv = ~ap_rst_n;
end
assign ap_sig_hs_continue = ap_const_logic_1;
assign ap_sig_top_allready = sandbox_AXIvideo2Mat_U0_ap_ready;
assign result_channel_U_ap_dummy_ce = ap_const_logic_1;
assign result_channel_din = sandbox_AXIvideo2Mat_U0_AXI_video_strm_V_data_V_2;
assign result_channel_read = sandbox_Block_proc_U0_ap_ready;
assign result_channel_write = ap_chn_write_sandbox_AXIvideo2Mat_U0_result_channel;
assign sandbox_AXIvideo2Mat_U0_ap_continue = result_channel_full_n;
assign sandbox_AXIvideo2Mat_U0_ap_start = ap_start;
assign sandbox_AXIvideo2Mat_U0_img_data_stream_0_V_full_n = ap_const_logic_1;
assign sandbox_AXIvideo2Mat_U0_img_data_stream_1_V_full_n = ap_const_logic_1;
assign sandbox_AXIvideo2Mat_U0_img_data_stream_2_V_full_n = ap_const_logic_1;
assign sandbox_AXIvideo2Mat_U0_video_in_TDATA = video_in_TDATA;
assign sandbox_AXIvideo2Mat_U0_video_in_TDEST = video_in_TDEST;
assign sandbox_AXIvideo2Mat_U0_video_in_TID = video_in_TID;
assign sandbox_AXIvideo2Mat_U0_video_in_TKEEP = video_in_TKEEP;
assign sandbox_AXIvideo2Mat_U0_video_in_TLAST = video_in_TLAST;
assign sandbox_AXIvideo2Mat_U0_video_in_TSTRB = video_in_TSTRB;
assign sandbox_AXIvideo2Mat_U0_video_in_TUSER = video_in_TUSER;
assign sandbox_AXIvideo2Mat_U0_video_in_TVALID = video_in_TVALID;
assign sandbox_Block_proc_U0_ap_continue = ap_sig_hs_continue;
assign sandbox_Block_proc_U0_ap_start = result_channel_empty_n;
assign sandbox_Block_proc_U0_result = result_channel_dout;
assign sandbox_Block_proc_U0_video_out_TREADY = video_out_TREADY;
assign sandbox_CONTROL_BUS_s_axi_U_ap_dummy_ce = ap_const_logic_1;
assign video_in_TREADY = sandbox_AXIvideo2Mat_U0_video_in_TREADY;
assign video_out_TDATA = sandbox_Block_proc_U0_video_out_TDATA;
assign video_out_TDEST = sandbox_Block_proc_U0_video_out_TDEST;
assign video_out_TID = sandbox_Block_proc_U0_video_out_TID;
assign video_out_TKEEP = sandbox_Block_proc_U0_video_out_TKEEP;
assign video_out_TLAST = sandbox_Block_proc_U0_video_out_TLAST;
assign video_out_TSTRB = sandbox_Block_proc_U0_video_out_TSTRB;
assign video_out_TUSER = sandbox_Block_proc_U0_video_out_TUSER;
assign video_out_TVALID = sandbox_Block_proc_U0_video_out_TVALID;


endmodule //sandbox

