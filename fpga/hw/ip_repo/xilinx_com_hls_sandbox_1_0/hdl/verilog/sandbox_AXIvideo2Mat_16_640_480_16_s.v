// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sandbox_AXIvideo2Mat_16_640_480_16_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        AXI_video_strm_V_data_V_2,
        AXI_video_strm_V_data_V_2_ap_vld,
        video_in_TDATA,
        video_in_TVALID,
        video_in_TREADY,
        video_in_TKEEP,
        video_in_TSTRB,
        video_in_TUSER,
        video_in_TLAST,
        video_in_TID,
        video_in_TDEST,
        img_data_stream_0_V_din,
        img_data_stream_0_V_full_n,
        img_data_stream_0_V_write,
        img_data_stream_1_V_din,
        img_data_stream_1_V_full_n,
        img_data_stream_1_V_write,
        img_data_stream_0_V_ap_vld,
        img_data_stream_1_V_ap_vld
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 7'b1;
parameter    ap_ST_st2_fsm_1 = 7'b10;
parameter    ap_ST_st3_fsm_2 = 7'b100;
parameter    ap_ST_st4_fsm_3 = 7'b1000;
parameter    ap_ST_pp1_stg0_fsm_4 = 7'b10000;
parameter    ap_ST_st7_fsm_5 = 7'b100000;
parameter    ap_ST_st8_fsm_6 = 7'b1000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv10_0 = 10'b0000000000;
parameter    ap_const_lv9_0 = 9'b000000000;
parameter    ap_const_lv10_280 = 10'b1010000000;
parameter    ap_const_lv10_1 = 10'b1;
parameter    ap_const_lv9_1E0 = 9'b111100000;
parameter    ap_const_lv9_1 = 9'b1;
parameter    ap_const_lv9_1DF = 9'b111011111;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [31:0] AXI_video_strm_V_data_V_2;
output   AXI_video_strm_V_data_V_2_ap_vld;
input  [15:0] video_in_TDATA;
input   video_in_TVALID;
output   video_in_TREADY;
input  [1:0] video_in_TKEEP;
input  [1:0] video_in_TSTRB;
input  [0:0] video_in_TUSER;
input  [0:0] video_in_TLAST;
input  [0:0] video_in_TID;
input  [0:0] video_in_TDEST;
output  [7:0] img_data_stream_0_V_din;
input   img_data_stream_0_V_full_n;
output   img_data_stream_0_V_write;
output  [7:0] img_data_stream_1_V_din;
input   img_data_stream_1_V_full_n;
output   img_data_stream_1_V_write;
output   img_data_stream_0_V_ap_vld;
output   img_data_stream_1_V_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg AXI_video_strm_V_data_V_2_ap_vld;
reg video_in_TREADY;
reg img_data_stream_0_V_ap_vld;
reg img_data_stream_1_V_ap_vld;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm = 7'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_26;
reg   [0:0] eol_1_reg_193;
reg   [15:0] axi_data_V_1_reg_204;
reg   [8:0] p_1_reg_215;
reg   [31:0] res_1_reg_226;
reg   [0:0] eol_reg_237;
reg   [0:0] axi_last_V_2_reg_249;
reg   [15:0] p_Val2_s_reg_261;
reg   [0:0] eol_2_reg_273;
reg   [15:0] tmp_data_V_reg_464;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_75;
reg   [0:0] tmp_last_V_reg_472;
wire   [0:0] exitcond1_fu_351_p2;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_89;
wire   [9:0] i_V_fu_357_p2;
reg   [9:0] i_V_reg_488;
wire   [0:0] exitcond2_fu_363_p2;
reg   [0:0] exitcond2_reg_493;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_4;
reg    ap_sig_bdd_100;
wire   [0:0] brmerge_fu_378_p2;
reg    ap_sig_bdd_108;
reg    ap_reg_ppiten_pp1_it0 = 1'b0;
reg    ap_reg_ppiten_pp1_it1 = 1'b0;
wire   [8:0] j_V_fu_369_p2;
wire   [31:0] res_2_fu_431_p3;
reg   [31:0] res_2_reg_506;
wire   [7:0] tmp_5_fu_439_p1;
reg   [7:0] tmp_5_reg_511;
reg   [7:0] tmp_6_reg_516;
reg    ap_sig_cseq_ST_st7_fsm_5;
reg    ap_sig_bdd_135;
reg    ap_sig_bdd_140;
wire   [31:0] res_4_fu_458_p2;
reg   [0:0] axi_last_V_3_reg_284;
reg   [0:0] axi_last_V1_reg_149;
reg    ap_sig_cseq_ST_st8_fsm_6;
reg    ap_sig_bdd_160;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_167;
reg   [15:0] axi_data_V_3_reg_296;
reg   [15:0] axi_data_V1_reg_159;
reg   [9:0] p_s_reg_169;
reg   [31:0] res_3_reg_308;
reg   [31:0] res_reg_180;
reg   [0:0] eol_1_phi_fu_196_p4;
reg   [15:0] axi_data_V_1_phi_fu_207_p4;
reg   [31:0] res_1_phi_fu_229_p4;
reg   [0:0] eol_phi_fu_241_p4;
wire   [0:0] ap_reg_phiprechg_axi_last_V_2_reg_249pp1_it0;
wire   [15:0] ap_reg_phiprechg_p_Val2_s_reg_261pp1_it0;
reg   [15:0] p_Val2_s_phi_fu_265_p4;
wire   [0:0] ap_reg_phiprechg_eol_2_reg_273pp1_it0;
reg   [0:0] eol_2_phi_fu_277_p4;
wire   [0:0] axi_last_V_1_mux_fu_390_p2;
reg   [0:0] eol_3_reg_320;
reg   [0:0] sof_1_fu_106;
wire   [0:0] not_sof_2_fu_384_p2;
wire   [0:0] tmp_4_fu_403_p1;
wire   [0:0] not_tmp_6_fu_397_p2;
wire   [30:0] tmp_9_fu_413_p4;
wire   [0:0] tmp_8_fu_407_p2;
wire   [31:0] res_1_s_fu_423_p3;
wire   [0:0] tmp_user_V_fu_342_p1;
reg   [6:0] ap_NS_fsm;
reg    ap_sig_bdd_324;
reg    ap_sig_bdd_107;
reg    ap_sig_bdd_195;
reg    ap_sig_bdd_120;
reg    ap_sig_bdd_211;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond1_fu_351_p2 == ap_const_lv1_0))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & ~(ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & ~(exitcond2_fu_363_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_351_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond2_fu_363_p2 == ap_const_lv1_0) & ~(ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_351_p2 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & ~(ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & ~(exitcond2_fu_363_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        axi_data_V1_reg_159 <= tmp_data_V_reg_464;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_6)) begin
        axi_data_V1_reg_159 <= axi_data_V_3_reg_296;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & (exitcond2_reg_493 == ap_const_lv1_0))) begin
        axi_data_V_1_reg_204 <= p_Val2_s_reg_261;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_351_p2 == ap_const_lv1_0))) begin
        axi_data_V_1_reg_204 <= axi_data_V1_reg_159;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & ~(exitcond2_fu_363_p2 == ap_const_lv1_0))) begin
        axi_data_V_3_reg_296 <= axi_data_V_1_phi_fu_207_p4;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_5) & (ap_const_lv1_0 == eol_3_reg_320) & ~ap_sig_bdd_140)) begin
        axi_data_V_3_reg_296 <= video_in_TDATA;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        axi_last_V1_reg_149 <= tmp_last_V_reg_472;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_6)) begin
        axi_last_V1_reg_149 <= axi_last_V_3_reg_284;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_120) begin
        if (ap_sig_bdd_195) begin
            axi_last_V_2_reg_249 <= eol_1_phi_fu_196_p4;
        end else if (ap_sig_bdd_107) begin
            axi_last_V_2_reg_249 <= video_in_TLAST;
        end else if ((ap_true == ap_true)) begin
            axi_last_V_2_reg_249 <= ap_reg_phiprechg_axi_last_V_2_reg_249pp1_it0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & ~(exitcond2_fu_363_p2 == ap_const_lv1_0))) begin
        axi_last_V_3_reg_284 <= eol_1_phi_fu_196_p4;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_5) & (ap_const_lv1_0 == eol_3_reg_320) & ~ap_sig_bdd_140)) begin
        axi_last_V_3_reg_284 <= video_in_TLAST;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & (exitcond2_reg_493 == ap_const_lv1_0))) begin
        eol_1_reg_193 <= axi_last_V_2_reg_249;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_351_p2 == ap_const_lv1_0))) begin
        eol_1_reg_193 <= axi_last_V1_reg_149;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_120) begin
        if (ap_sig_bdd_195) begin
            eol_2_reg_273 <= axi_last_V_1_mux_fu_390_p2;
        end else if (ap_sig_bdd_107) begin
            eol_2_reg_273 <= video_in_TLAST;
        end else if ((ap_true == ap_true)) begin
            eol_2_reg_273 <= ap_reg_phiprechg_eol_2_reg_273pp1_it0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & ~(exitcond2_fu_363_p2 == ap_const_lv1_0))) begin
        eol_3_reg_320 <= eol_phi_fu_241_p4;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_5) & (ap_const_lv1_0 == eol_3_reg_320) & ~ap_sig_bdd_140)) begin
        eol_3_reg_320 <= video_in_TLAST;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & (exitcond2_reg_493 == ap_const_lv1_0))) begin
        eol_reg_237 <= eol_2_reg_273;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_351_p2 == ap_const_lv1_0))) begin
        eol_reg_237 <= ap_const_lv1_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond2_fu_363_p2 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)))) begin
        p_1_reg_215 <= j_V_fu_369_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_351_p2 == ap_const_lv1_0))) begin
        p_1_reg_215 <= ap_const_lv9_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_120) begin
        if (ap_sig_bdd_195) begin
            p_Val2_s_reg_261 <= axi_data_V_1_phi_fu_207_p4;
        end else if (ap_sig_bdd_107) begin
            p_Val2_s_reg_261 <= video_in_TDATA;
        end else if ((ap_true == ap_true)) begin
            p_Val2_s_reg_261 <= ap_reg_phiprechg_p_Val2_s_reg_261pp1_it0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        p_s_reg_169 <= ap_const_lv10_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_6)) begin
        p_s_reg_169 <= i_V_reg_488;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & (exitcond2_reg_493 == ap_const_lv1_0))) begin
        res_1_reg_226 <= res_2_reg_506;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_351_p2 == ap_const_lv1_0))) begin
        res_1_reg_226 <= res_reg_180;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & ~(exitcond2_fu_363_p2 == ap_const_lv1_0))) begin
        res_3_reg_308 <= res_1_phi_fu_229_p4;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_5) & (ap_const_lv1_0 == eol_3_reg_320) & ~ap_sig_bdd_140)) begin
        res_3_reg_308 <= res_4_fu_458_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        res_reg_180 <= ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_6)) begin
        res_reg_180 <= res_3_reg_308;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond2_fu_363_p2 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)))) begin
        sof_1_fu_106 <= ap_const_lv1_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        sof_1_fu_106 <= ap_const_lv1_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & ~(ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)))) begin
        exitcond2_reg_493 <= exitcond2_fu_363_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        i_V_reg_488 <= i_V_fu_357_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond2_fu_363_p2 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)))) begin
        res_2_reg_506 <= res_2_fu_431_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond2_fu_363_p2 == ap_const_lv1_0) & ~(ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)))) begin
        tmp_5_reg_511 <= tmp_5_fu_439_p1;
        tmp_6_reg_516 <= {{p_Val2_s_phi_fu_265_p4[ap_const_lv32_F : ap_const_lv32_8]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(video_in_TVALID == ap_const_logic_0))) begin
        tmp_data_V_reg_464 <= video_in_TDATA;
        tmp_last_V_reg_472 <= video_in_TLAST;
    end
end

/// AXI_video_strm_V_data_V_2_ap_vld assign process. ///
always @ (exitcond1_fu_351_p2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond1_fu_351_p2 == ap_const_lv1_0))) begin
        AXI_video_strm_V_data_V_2_ap_vld = ap_const_logic_1;
    end else begin
        AXI_video_strm_V_data_V_2_ap_vld = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or exitcond1_fu_351_p2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond1_fu_351_p2 == ap_const_lv1_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (exitcond1_fu_351_p2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond1_fu_351_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg0_fsm_4 assign process. ///
always @ (ap_sig_bdd_100)
begin
    if (ap_sig_bdd_100) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_26)
begin
    if (ap_sig_bdd_26) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_75)
begin
    if (ap_sig_bdd_75) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_167)
begin
    if (ap_sig_bdd_167) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_89)
begin
    if (ap_sig_bdd_89) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_5 assign process. ///
always @ (ap_sig_bdd_135)
begin
    if (ap_sig_bdd_135) begin
        ap_sig_cseq_ST_st7_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_6 assign process. ///
always @ (ap_sig_bdd_160)
begin
    if (ap_sig_bdd_160) begin
        ap_sig_cseq_ST_st8_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_6 = ap_const_logic_0;
    end
end

/// axi_data_V_1_phi_fu_207_p4 assign process. ///
always @ (axi_data_V_1_reg_204 or p_Val2_s_reg_261 or exitcond2_reg_493 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (exitcond2_reg_493 == ap_const_lv1_0))) begin
        axi_data_V_1_phi_fu_207_p4 = p_Val2_s_reg_261;
    end else begin
        axi_data_V_1_phi_fu_207_p4 = axi_data_V_1_reg_204;
    end
end

/// eol_1_phi_fu_196_p4 assign process. ///
always @ (eol_1_reg_193 or axi_last_V_2_reg_249 or exitcond2_reg_493 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (exitcond2_reg_493 == ap_const_lv1_0))) begin
        eol_1_phi_fu_196_p4 = axi_last_V_2_reg_249;
    end else begin
        eol_1_phi_fu_196_p4 = eol_1_reg_193;
    end
end

/// eol_2_phi_fu_277_p4 assign process. ///
always @ (video_in_TLAST or brmerge_fu_378_p2 or ap_reg_phiprechg_eol_2_reg_273pp1_it0 or axi_last_V_1_mux_fu_390_p2 or ap_sig_bdd_211)
begin
    if (ap_sig_bdd_211) begin
        if (~(ap_const_lv1_0 == brmerge_fu_378_p2)) begin
            eol_2_phi_fu_277_p4 = axi_last_V_1_mux_fu_390_p2;
        end else if ((ap_const_lv1_0 == brmerge_fu_378_p2)) begin
            eol_2_phi_fu_277_p4 = video_in_TLAST;
        end else begin
            eol_2_phi_fu_277_p4 = ap_reg_phiprechg_eol_2_reg_273pp1_it0;
        end
    end else begin
        eol_2_phi_fu_277_p4 = ap_reg_phiprechg_eol_2_reg_273pp1_it0;
    end
end

/// eol_phi_fu_241_p4 assign process. ///
always @ (eol_reg_237 or eol_2_reg_273 or exitcond2_reg_493 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (exitcond2_reg_493 == ap_const_lv1_0))) begin
        eol_phi_fu_241_p4 = eol_2_reg_273;
    end else begin
        eol_phi_fu_241_p4 = eol_reg_237;
    end
end

/// img_data_stream_0_V_ap_vld assign process. ///
always @ (exitcond2_reg_493 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_sig_bdd_108 or ap_reg_ppiten_pp1_it0 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & (exitcond2_reg_493 == ap_const_lv1_0))) begin
        img_data_stream_0_V_ap_vld = ap_const_logic_1;
    end else begin
        img_data_stream_0_V_ap_vld = ap_const_logic_0;
    end
end

/// img_data_stream_1_V_ap_vld assign process. ///
always @ (exitcond2_reg_493 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_sig_bdd_108 or ap_reg_ppiten_pp1_it0 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & (exitcond2_reg_493 == ap_const_lv1_0))) begin
        img_data_stream_1_V_ap_vld = ap_const_logic_1;
    end else begin
        img_data_stream_1_V_ap_vld = ap_const_logic_0;
    end
end

/// p_Val2_s_phi_fu_265_p4 assign process. ///
always @ (video_in_TDATA or brmerge_fu_378_p2 or axi_data_V_1_phi_fu_207_p4 or ap_reg_phiprechg_p_Val2_s_reg_261pp1_it0 or ap_sig_bdd_211)
begin
    if (ap_sig_bdd_211) begin
        if (~(ap_const_lv1_0 == brmerge_fu_378_p2)) begin
            p_Val2_s_phi_fu_265_p4 = axi_data_V_1_phi_fu_207_p4;
        end else if ((ap_const_lv1_0 == brmerge_fu_378_p2)) begin
            p_Val2_s_phi_fu_265_p4 = video_in_TDATA;
        end else begin
            p_Val2_s_phi_fu_265_p4 = ap_reg_phiprechg_p_Val2_s_reg_261pp1_it0;
        end
    end else begin
        p_Val2_s_phi_fu_265_p4 = ap_reg_phiprechg_p_Val2_s_reg_261pp1_it0;
    end
end

/// res_1_phi_fu_229_p4 assign process. ///
always @ (res_1_reg_226 or exitcond2_reg_493 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_reg_ppiten_pp1_it1 or res_2_reg_506)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (exitcond2_reg_493 == ap_const_lv1_0))) begin
        res_1_phi_fu_229_p4 = res_2_reg_506;
    end else begin
        res_1_phi_fu_229_p4 = res_1_reg_226;
    end
end

/// video_in_TREADY assign process. ///
always @ (video_in_TVALID or ap_sig_cseq_ST_st2_fsm_1 or exitcond2_fu_363_p2 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or brmerge_fu_378_p2 or ap_sig_bdd_108 or ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_st7_fsm_5 or ap_sig_bdd_140 or eol_3_reg_320)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(video_in_TVALID == ap_const_logic_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_5) & (ap_const_lv1_0 == eol_3_reg_320) & ~ap_sig_bdd_140) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond2_fu_363_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == brmerge_fu_378_p2) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0))))) begin
        video_in_TREADY = ap_const_logic_1;
    end else begin
        video_in_TREADY = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or video_in_TVALID or exitcond1_fu_351_p2 or exitcond2_fu_363_p2 or ap_sig_bdd_108 or ap_reg_ppiten_pp1_it0 or ap_sig_bdd_140 or eol_3_reg_320 or tmp_user_V_fu_342_p1 or ap_sig_bdd_324)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_324) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((~(video_in_TVALID == ap_const_logic_0) & (ap_const_lv1_0 == tmp_user_V_fu_342_p1))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else if ((~(video_in_TVALID == ap_const_logic_0) & ~(ap_const_lv1_0 == tmp_user_V_fu_342_p1))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            if (~(exitcond1_fu_351_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end
        end
        ap_ST_pp1_stg0_fsm_4 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & ~(exitcond2_fu_363_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & ~(exitcond2_fu_363_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st7_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end
        end
        ap_ST_st7_fsm_5 : 
        begin
            if (((ap_const_lv1_0 == eol_3_reg_320) & ~ap_sig_bdd_140)) begin
                ap_NS_fsm = ap_ST_st7_fsm_5;
            end else if ((~ap_sig_bdd_140 & ~(ap_const_lv1_0 == eol_3_reg_320))) begin
                ap_NS_fsm = ap_ST_st8_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_5;
            end
        end
        ap_ST_st8_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign AXI_video_strm_V_data_V_2 = res_reg_180;
assign ap_reg_phiprechg_axi_last_V_2_reg_249pp1_it0 = 'bx;
assign ap_reg_phiprechg_eol_2_reg_273pp1_it0 = 'bx;
assign ap_reg_phiprechg_p_Val2_s_reg_261pp1_it0 = 'bx;

/// ap_sig_bdd_100 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_100 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_107 assign process. ///
always @ (exitcond2_fu_363_p2 or brmerge_fu_378_p2)
begin
    ap_sig_bdd_107 = ((exitcond2_fu_363_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == brmerge_fu_378_p2));
end

/// ap_sig_bdd_108 assign process. ///
always @ (video_in_TVALID or exitcond2_fu_363_p2 or brmerge_fu_378_p2)
begin
    ap_sig_bdd_108 = ((video_in_TVALID == ap_const_logic_0) & (exitcond2_fu_363_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == brmerge_fu_378_p2));
end

/// ap_sig_bdd_120 assign process. ///
always @ (ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_sig_bdd_108 or ap_reg_ppiten_pp1_it0)
begin
    ap_sig_bdd_120 = ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_108 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)));
end

/// ap_sig_bdd_135 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_135 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_140 assign process. ///
always @ (video_in_TVALID or eol_3_reg_320)
begin
    ap_sig_bdd_140 = ((video_in_TVALID == ap_const_logic_0) & (ap_const_lv1_0 == eol_3_reg_320));
end

/// ap_sig_bdd_160 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_160 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_167 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_167 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_195 assign process. ///
always @ (exitcond2_fu_363_p2 or brmerge_fu_378_p2)
begin
    ap_sig_bdd_195 = ((exitcond2_fu_363_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == brmerge_fu_378_p2));
end

/// ap_sig_bdd_211 assign process. ///
always @ (exitcond2_fu_363_p2 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_reg_ppiten_pp1_it0)
begin
    ap_sig_bdd_211 = ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond2_fu_363_p2 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0));
end

/// ap_sig_bdd_26 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_26 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_324 assign process. ///
always @ (ap_start or ap_done_reg)
begin
    ap_sig_bdd_324 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_75 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_75 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_89 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_89 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end
assign axi_last_V_1_mux_fu_390_p2 = (eol_1_phi_fu_196_p4 | not_sof_2_fu_384_p2);
assign brmerge_fu_378_p2 = (sof_1_fu_106 | eol_phi_fu_241_p4);
assign exitcond1_fu_351_p2 = (p_s_reg_169 == ap_const_lv10_280? 1'b1: 1'b0);
assign exitcond2_fu_363_p2 = (p_1_reg_215 == ap_const_lv9_1E0? 1'b1: 1'b0);
assign i_V_fu_357_p2 = (p_s_reg_169 + ap_const_lv10_1);
assign img_data_stream_0_V_din = tmp_5_reg_511;
assign img_data_stream_0_V_write = ap_const_logic_0;
assign img_data_stream_1_V_din = tmp_6_reg_516;
assign img_data_stream_1_V_write = ap_const_logic_0;
assign j_V_fu_369_p2 = (p_1_reg_215 + ap_const_lv9_1);
assign not_sof_2_fu_384_p2 = (sof_1_fu_106 ^ ap_const_lv1_1);
assign not_tmp_6_fu_397_p2 = (p_1_reg_215 != ap_const_lv9_1DF? 1'b1: 1'b0);
assign res_1_s_fu_423_p3 = {{tmp_9_fu_413_p4}, {tmp_8_fu_407_p2}};
assign res_2_fu_431_p3 = ((eol_2_phi_fu_277_p4)? res_1_s_fu_423_p3: res_1_phi_fu_229_p4);
assign res_4_fu_458_p2 = (res_3_reg_308 | ap_const_lv32_2);
assign tmp_4_fu_403_p1 = res_1_phi_fu_229_p4[0:0];
assign tmp_5_fu_439_p1 = p_Val2_s_phi_fu_265_p4[7:0];
assign tmp_8_fu_407_p2 = (tmp_4_fu_403_p1 | not_tmp_6_fu_397_p2);
assign tmp_9_fu_413_p4 = {{res_1_phi_fu_229_p4[ap_const_lv32_1F : ap_const_lv32_1]}};
assign tmp_user_V_fu_342_p1 = video_in_TUSER;


endmodule //sandbox_AXIvideo2Mat_16_640_480_16_s

