

================================================================
== Vivado HLS Report for 'sandbox_Block_proc'
================================================================
* Date:           Wed Jan 27 13:42:17 2016

* Version:        2014.4 (Build 1071461 on Tue Nov 18 16:42:57 PM 2014)
* Project:        prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +---------+-------+----------+------------+
    |  Clock  | Target| Estimated| Uncertainty|
    +---------+-------+----------+------------+
    |default  |   6.67|      2.11|        0.83|
    +---------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +---------+---------+---------+---------+---------+
    |      Latency      |      Interval     | Pipeline|
    |   min   |   max   |   min   |   max   |   Type  |
    +---------+---------+---------+---------+---------+
    |  2079361|  2079361|  2079361|  2079361|   none  |
    +---------+---------+---------+---------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |               |      Latency      | Iteration|  Initiation Interval  | Trip |          |
        |   Loop Name   |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------+---------+---------+----------+-----------+-----------+------+----------+
        |- loop_height  |  2079360|  2079360|      1083|          -|          -|  1920|    no    |
        | + loop_width  |     1080|     1080|         2|          1|          1|  1080|    yes   |
        +---------------+---------+---------+----------+-----------+-----------+------+----------+



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|Expression       |        -|      -|       -|      -|
|FIFO             |        -|      -|       -|      -|
|Instance         |        -|      -|       -|      -|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|      -|
|Register         |        -|      -|       -|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|       0|      0|
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    N/A

    * Multiplexer: 
    N/A

    * Register: 
    N/A



================================================================
== Interface
================================================================
* Summary: 
N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 5
* Pipeline: 1
  Pipeline-0: II = 1, D = 2, States = { 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!exitcond3_i)
3 --> 
	5  / (exitcond4_i)
	4  / (!exitcond4_i)
4 --> 
	3  / true
5 --> 
	2  / true
* FSM state operations: 

 <State 1>: 1.57ns
ST_1: tmp_user_V [1/1] 0.00ns
newFuncRoot:0  %tmp_user_V = alloca i1, align 1

ST_1: stg_7 [1/1] 0.00ns
newFuncRoot:1  call void (...)* @_ssdm_op_SpecInterface(i1* %video_out_V_dest_V, i1* %video_out_V_id_V, i1* %video_out_V_last_V, i1* %video_out_V_user_V, i3* %video_out_V_strb_V, i3* %video_out_V_keep_V, i24* %video_out_V_data_V, [5 x i8]* @p_str1805, i32 0, i32 0, i32 0, i32 0, [14 x i8]* @p_str1808, [1 x i8]* @p_str1807, [1 x i8]* @p_str1807)

ST_1: result_load [1/1] 0.00ns
newFuncRoot:2  %result_load = call i32 @_ssdm_op_Read.ap_auto.volatile.i32P(i32* %result)

ST_1: img_data_stream_0_V_assign [1/1] 0.00ns
newFuncRoot:3  %img_data_stream_0_V_assign = alloca i8, align 1

ST_1: stg_10 [1/1] 0.00ns
newFuncRoot:4  call void (...)* @_ssdm_op_SpecInterface(i8* %img_data_stream_0_V_assign, [8 x i8]* @str7, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str8, [1 x i8]* @str8, [8 x i8]* @str7)

ST_1: img_data_stream_1_V_assign [1/1] 0.00ns
newFuncRoot:5  %img_data_stream_1_V_assign = alloca i8, align 1

ST_1: stg_12 [1/1] 0.00ns
newFuncRoot:6  call void (...)* @_ssdm_op_SpecInterface(i8* %img_data_stream_1_V_assign, [8 x i8]* @str9, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str10, [1 x i8]* @str10, [8 x i8]* @str9)

ST_1: img_data_stream_2_V_assign [1/1] 0.00ns
newFuncRoot:7  %img_data_stream_2_V_assign = alloca i8, align 1

ST_1: stg_14 [1/1] 0.00ns
newFuncRoot:8  call void (...)* @_ssdm_op_SpecInterface(i8* %img_data_stream_2_V_assign, [8 x i8]* @str11, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @str12, [1 x i8]* @str12, [8 x i8]* @str11)

ST_1: stg_15 [1/1] 1.57ns
newFuncRoot:9  store i1 true, i1* %tmp_user_V, align 1

ST_1: stg_16 [1/1] 1.57ns
newFuncRoot:10  br label %.exitStub


 <State 2>: 2.11ns
ST_2: p_i [1/1] 0.00ns
.exitStub:0  %p_i = phi i11 [ %i_V, %2 ], [ 0, %newFuncRoot ]

ST_2: exitcond3_i [1/1] 2.11ns
.exitStub:1  %exitcond3_i = icmp eq i11 %p_i, -128

ST_2: stg_19 [1/1] 0.00ns
.exitStub:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 1920, i64 1920, i64 1920)

ST_2: i_V [1/1] 1.84ns
.exitStub:3  %i_V = add i11 %p_i, 1

ST_2: stg_21 [1/1] 0.00ns
.exitStub:4  br i1 %exitcond3_i, label %"Mat2AXIvideo<24, 1920, 1080, 32>.exit", label %0

ST_2: stg_22 [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecLoopName([12 x i8]* @p_str1818) nounwind

ST_2: tmp_i [1/1] 0.00ns
:1  %tmp_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str1818)

ST_2: stg_24 [1/1] 1.57ns
:2  br label %1

ST_2: stg_25 [1/1] 0.00ns
Mat2AXIvideo<24, 1920, 1080, 32>.exit:0  ret void


 <State 3>: 2.11ns
ST_3: p_3_i [1/1] 0.00ns
:0  %p_3_i = phi i11 [ 0, %0 ], [ %j_V, %"operator>>.exit.i" ]

ST_3: exitcond4_i [1/1] 2.11ns
:1  %exitcond4_i = icmp eq i11 %p_3_i, -968

ST_3: stg_28 [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecLoopTripCount(i64 1080, i64 1080, i64 1080)

ST_3: j_V [1/1] 1.84ns
:3  %j_V = add i11 %p_3_i, 1

ST_3: stg_30 [1/1] 0.00ns
:4  br i1 %exitcond4_i, label %2, label %"operator>>.exit.i"

ST_3: axi_last_V [1/1] 2.11ns
operator>>.exit.i:4  %axi_last_V = icmp eq i11 %p_3_i, -969


 <State 4>: 1.70ns
ST_4: tmp_user_V_load [1/1] 0.00ns
operator>>.exit.i:0  %tmp_user_V_load = load i1* %tmp_user_V, align 1

ST_4: stg_33 [1/1] 0.00ns
operator>>.exit.i:1  call void (...)* @_ssdm_op_SpecLoopName([11 x i8]* @p_str1819) nounwind

ST_4: tmp_i_21 [1/1] 0.00ns
operator>>.exit.i:2  %tmp_i_21 = call i32 (...)* @_ssdm_op_SpecRegionBegin([11 x i8]* @p_str1819)

ST_4: stg_35 [1/1] 0.00ns
operator>>.exit.i:3  call void (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str1807) nounwind

ST_4: tmp_1_i [1/1] 0.00ns
operator>>.exit.i:5  %tmp_1_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str1823)

ST_4: stg_37 [1/1] 0.00ns
operator>>.exit.i:6  call void (...)* @_ssdm_op_SpecProtocol(i32 0, [1 x i8]* @p_str1807) nounwind

ST_4: tmp_10 [1/1] 1.70ns
operator>>.exit.i:7  %tmp_10 = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %img_data_stream_0_V_assign)

ST_4: tmp_11 [1/1] 1.70ns
operator>>.exit.i:8  %tmp_11 = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %img_data_stream_1_V_assign)

ST_4: tmp [1/1] 1.70ns
operator>>.exit.i:9  %tmp = call i8 @_ssdm_op_Read.ap_fifo.volatile.i8P(i8* %img_data_stream_2_V_assign)

ST_4: empty [1/1] 0.00ns
operator>>.exit.i:10  %empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str1823, i32 %tmp_1_i)

ST_4: tmp_data_V [1/1] 0.00ns
operator>>.exit.i:11  %tmp_data_V = call i24 @_ssdm_op_BitConcatenate.i24.i8.i8.i8(i8 %tmp, i8 %tmp_11, i8 %tmp_10)

ST_4: stg_43 [1/1] 0.00ns
operator>>.exit.i:12  call void @_ssdm_op_Write.ap_auto.volatile.i24P.i3P.i3P.i1P.i1P.i1P.i1P(i24* %video_out_V_data_V, i3* %video_out_V_keep_V, i3* %video_out_V_strb_V, i1* %video_out_V_user_V, i1* %video_out_V_last_V, i1* %video_out_V_id_V, i1* %video_out_V_dest_V, i24 %tmp_data_V, i3 -1, i3 undef, i1 %tmp_user_V_load, i1 %axi_last_V, i1 undef, i1 undef)

ST_4: empty_22 [1/1] 0.00ns
operator>>.exit.i:13  %empty_22 = call i32 (...)* @_ssdm_op_SpecRegionEnd([11 x i8]* @p_str1819, i32 %tmp_i_21)

ST_4: stg_45 [1/1] 1.57ns
operator>>.exit.i:14  store i1 false, i1* %tmp_user_V, align 1

ST_4: stg_46 [1/1] 0.00ns
operator>>.exit.i:15  br label %1


 <State 5>: 0.00ns
ST_5: empty_23 [1/1] 0.00ns
:0  %empty_23 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str1818, i32 %tmp_i)

ST_5: stg_48 [1/1] 0.00ns
:1  br label %.exitStub



============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
