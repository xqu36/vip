// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sandbox_AXIvideo2Mat (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        AXI_video_strm_V_data_V_2,
        AXI_video_strm_V_data_V_2_ap_vld,
        video_in_TDATA,
        video_in_TVALID,
        video_in_TREADY,
        video_in_TKEEP,
        video_in_TSTRB,
        video_in_TUSER,
        video_in_TLAST,
        video_in_TID,
        video_in_TDEST,
        img_data_stream_0_V_din,
        img_data_stream_0_V_full_n,
        img_data_stream_0_V_write,
        img_data_stream_1_V_din,
        img_data_stream_1_V_full_n,
        img_data_stream_1_V_write,
        img_data_stream_2_V_din,
        img_data_stream_2_V_full_n,
        img_data_stream_2_V_write,
        img_data_stream_0_V_ap_vld,
        img_data_stream_1_V_ap_vld,
        img_data_stream_2_V_ap_vld
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 7'b1;
parameter    ap_ST_st2_fsm_1 = 7'b10;
parameter    ap_ST_st3_fsm_2 = 7'b100;
parameter    ap_ST_st4_fsm_3 = 7'b1000;
parameter    ap_ST_pp1_stg0_fsm_4 = 7'b10000;
parameter    ap_ST_st7_fsm_5 = 7'b100000;
parameter    ap_ST_st8_fsm_6 = 7'b1000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv11_0 = 11'b00000000000;
parameter    ap_const_lv11_780 = 11'b11110000000;
parameter    ap_const_lv11_1 = 11'b1;
parameter    ap_const_lv11_438 = 11'b10000111000;
parameter    ap_const_lv11_437 = 11'b10000110111;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [31:0] AXI_video_strm_V_data_V_2;
output   AXI_video_strm_V_data_V_2_ap_vld;
input  [23:0] video_in_TDATA;
input   video_in_TVALID;
output   video_in_TREADY;
input  [2:0] video_in_TKEEP;
input  [2:0] video_in_TSTRB;
input  [0:0] video_in_TUSER;
input  [0:0] video_in_TLAST;
input  [0:0] video_in_TID;
input  [0:0] video_in_TDEST;
output  [7:0] img_data_stream_0_V_din;
input   img_data_stream_0_V_full_n;
output   img_data_stream_0_V_write;
output  [7:0] img_data_stream_1_V_din;
input   img_data_stream_1_V_full_n;
output   img_data_stream_1_V_write;
output  [7:0] img_data_stream_2_V_din;
input   img_data_stream_2_V_full_n;
output   img_data_stream_2_V_write;
output   img_data_stream_0_V_ap_vld;
output   img_data_stream_1_V_ap_vld;
output   img_data_stream_2_V_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg AXI_video_strm_V_data_V_2_ap_vld;
reg video_in_TREADY;
reg img_data_stream_0_V_ap_vld;
reg img_data_stream_1_V_ap_vld;
reg img_data_stream_2_V_ap_vld;
reg    ap_done_reg = 1'b0;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm = 7'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_26;
reg   [0:0] eol_1_reg_206;
reg   [23:0] axi_data_V_1_reg_217;
reg   [10:0] p_1_reg_228;
reg   [31:0] res_1_reg_239;
reg   [0:0] eol_reg_250;
reg   [0:0] axi_last_V_2_reg_262;
reg   [23:0] p_Val2_s_reg_274;
reg   [0:0] eol_2_reg_286;
reg   [23:0] tmp_data_V_reg_487;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_79;
reg   [0:0] tmp_last_V_reg_495;
wire   [0:0] exitcond1_fu_364_p2;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_93;
wire   [10:0] i_V_fu_370_p2;
reg   [10:0] i_V_reg_511;
wire   [0:0] exitcond2_fu_376_p2;
reg   [0:0] exitcond2_reg_516;
reg    ap_sig_cseq_ST_pp1_stg0_fsm_4;
reg    ap_sig_bdd_104;
wire   [0:0] brmerge_fu_391_p2;
reg    ap_sig_bdd_112;
reg    ap_reg_ppiten_pp1_it0 = 1'b0;
reg    ap_reg_ppiten_pp1_it1 = 1'b0;
wire   [10:0] j_V_fu_382_p2;
wire   [31:0] res_2_fu_444_p3;
reg   [31:0] res_2_reg_529;
wire   [7:0] tmp_6_fu_452_p1;
reg   [7:0] tmp_6_reg_534;
reg   [7:0] tmp_7_reg_539;
reg   [7:0] tmp_9_reg_544;
reg    ap_sig_cseq_ST_st7_fsm_5;
reg    ap_sig_bdd_141;
reg    ap_sig_bdd_146;
wire   [31:0] res_4_fu_481_p2;
reg   [0:0] axi_last_V_3_reg_297;
reg   [0:0] axi_last_V1_reg_162;
reg    ap_sig_cseq_ST_st8_fsm_6;
reg    ap_sig_bdd_166;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_173;
reg   [23:0] axi_data_V_3_reg_309;
reg   [23:0] axi_data_V1_reg_172;
reg   [10:0] p_s_reg_182;
reg   [31:0] res_3_reg_321;
reg   [31:0] res_reg_193;
reg   [0:0] eol_1_phi_fu_209_p4;
reg   [23:0] axi_data_V_1_phi_fu_220_p4;
reg   [31:0] res_1_phi_fu_242_p4;
reg   [0:0] eol_phi_fu_254_p4;
wire   [0:0] ap_reg_phiprechg_axi_last_V_2_reg_262pp1_it0;
wire   [23:0] ap_reg_phiprechg_p_Val2_s_reg_274pp1_it0;
reg   [23:0] p_Val2_s_phi_fu_278_p4;
wire   [0:0] ap_reg_phiprechg_eol_2_reg_286pp1_it0;
reg   [0:0] eol_2_phi_fu_290_p4;
wire   [0:0] axi_last_V_1_mux_fu_403_p2;
reg   [0:0] eol_3_reg_333;
reg   [0:0] sof_1_fu_112;
wire   [0:0] not_sof_2_fu_397_p2;
wire   [0:0] tmp_4_fu_416_p1;
wire   [0:0] not_tmp_6_fu_410_p2;
wire   [30:0] tmp_5_fu_426_p4;
wire   [0:0] tmp_8_fu_420_p2;
wire   [31:0] res_1_s_fu_436_p3;
wire   [0:0] tmp_user_V_fu_355_p1;
reg   [6:0] ap_NS_fsm;
reg    ap_sig_bdd_335;
reg    ap_sig_bdd_111;
reg    ap_sig_bdd_200;
reg    ap_sig_bdd_124;
reg    ap_sig_bdd_216;




/// the current state (ap_CS_fsm) of the state machine. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

/// ap_done_reg assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_done_reg
    if (ap_rst == 1'b1) begin
        ap_done_reg <= ap_const_logic_0;
    end else begin
        if ((ap_const_logic_1 == ap_continue)) begin
            ap_done_reg <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond1_fu_364_p2 == ap_const_lv1_0))) begin
            ap_done_reg <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it0 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it0
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & ~(exitcond2_fu_376_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_0;
        end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_364_p2 == ap_const_lv1_0))) begin
            ap_reg_ppiten_pp1_it0 <= ap_const_logic_1;
        end
    end
end

/// ap_reg_ppiten_pp1_it1 assign process. ///
always @ (posedge ap_clk)
begin : ap_ret_ap_reg_ppiten_pp1_it1
    if (ap_rst == 1'b1) begin
        ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond2_fu_376_p2 == ap_const_lv1_0) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_1;
        end else if ((((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_364_p2 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & ~(exitcond2_fu_376_p2 == ap_const_lv1_0)))) begin
            ap_reg_ppiten_pp1_it1 <= ap_const_logic_0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        axi_data_V1_reg_172 <= tmp_data_V_reg_487;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_6)) begin
        axi_data_V1_reg_172 <= axi_data_V_3_reg_309;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & (exitcond2_reg_516 == ap_const_lv1_0))) begin
        axi_data_V_1_reg_217 <= p_Val2_s_reg_274;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_364_p2 == ap_const_lv1_0))) begin
        axi_data_V_1_reg_217 <= axi_data_V1_reg_172;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & ~(exitcond2_fu_376_p2 == ap_const_lv1_0))) begin
        axi_data_V_3_reg_309 <= axi_data_V_1_phi_fu_220_p4;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_5) & (ap_const_lv1_0 == eol_3_reg_333) & ~ap_sig_bdd_146)) begin
        axi_data_V_3_reg_309 <= video_in_TDATA;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        axi_last_V1_reg_162 <= tmp_last_V_reg_495;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_6)) begin
        axi_last_V1_reg_162 <= axi_last_V_3_reg_297;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_124) begin
        if (ap_sig_bdd_200) begin
            axi_last_V_2_reg_262 <= eol_1_phi_fu_209_p4;
        end else if (ap_sig_bdd_111) begin
            axi_last_V_2_reg_262 <= video_in_TLAST;
        end else if ((ap_true == ap_true)) begin
            axi_last_V_2_reg_262 <= ap_reg_phiprechg_axi_last_V_2_reg_262pp1_it0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & ~(exitcond2_fu_376_p2 == ap_const_lv1_0))) begin
        axi_last_V_3_reg_297 <= eol_1_phi_fu_209_p4;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_5) & (ap_const_lv1_0 == eol_3_reg_333) & ~ap_sig_bdd_146)) begin
        axi_last_V_3_reg_297 <= video_in_TLAST;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & (exitcond2_reg_516 == ap_const_lv1_0))) begin
        eol_1_reg_206 <= axi_last_V_2_reg_262;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_364_p2 == ap_const_lv1_0))) begin
        eol_1_reg_206 <= axi_last_V1_reg_162;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_124) begin
        if (ap_sig_bdd_200) begin
            eol_2_reg_286 <= axi_last_V_1_mux_fu_403_p2;
        end else if (ap_sig_bdd_111) begin
            eol_2_reg_286 <= video_in_TLAST;
        end else if ((ap_true == ap_true)) begin
            eol_2_reg_286 <= ap_reg_phiprechg_eol_2_reg_286pp1_it0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & ~(exitcond2_fu_376_p2 == ap_const_lv1_0))) begin
        eol_3_reg_333 <= eol_phi_fu_254_p4;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_5) & (ap_const_lv1_0 == eol_3_reg_333) & ~ap_sig_bdd_146)) begin
        eol_3_reg_333 <= video_in_TLAST;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & (exitcond2_reg_516 == ap_const_lv1_0))) begin
        eol_reg_250 <= eol_2_reg_286;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_364_p2 == ap_const_lv1_0))) begin
        eol_reg_250 <= ap_const_lv1_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond2_fu_376_p2 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)))) begin
        p_1_reg_228 <= j_V_fu_382_p2;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_364_p2 == ap_const_lv1_0))) begin
        p_1_reg_228 <= ap_const_lv11_0;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (ap_sig_bdd_124) begin
        if (ap_sig_bdd_200) begin
            p_Val2_s_reg_274 <= axi_data_V_1_phi_fu_220_p4;
        end else if (ap_sig_bdd_111) begin
            p_Val2_s_reg_274 <= video_in_TDATA;
        end else if ((ap_true == ap_true)) begin
            p_Val2_s_reg_274 <= ap_reg_phiprechg_p_Val2_s_reg_274pp1_it0;
        end
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        p_s_reg_182 <= ap_const_lv11_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_6)) begin
        p_s_reg_182 <= i_V_reg_511;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & (exitcond2_reg_516 == ap_const_lv1_0))) begin
        res_1_reg_239 <= res_2_reg_529;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & (exitcond1_fu_364_p2 == ap_const_lv1_0))) begin
        res_1_reg_239 <= res_reg_193;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & ~(exitcond2_fu_376_p2 == ap_const_lv1_0))) begin
        res_3_reg_321 <= res_1_phi_fu_242_p4;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_5) & (ap_const_lv1_0 == eol_3_reg_333) & ~ap_sig_bdd_146)) begin
        res_3_reg_321 <= res_4_fu_481_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        res_reg_193 <= ap_const_lv32_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_6)) begin
        res_reg_193 <= res_3_reg_321;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond2_fu_376_p2 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)))) begin
        sof_1_fu_112 <= ap_const_lv1_0;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        sof_1_fu_112 <= ap_const_lv1_1;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)))) begin
        exitcond2_reg_516 <= exitcond2_fu_376_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        i_V_reg_511 <= i_V_fu_370_p2;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond2_fu_376_p2 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)))) begin
        res_2_reg_529 <= res_2_fu_444_p3;
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond2_fu_376_p2 == ap_const_lv1_0) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)))) begin
        tmp_6_reg_534 <= tmp_6_fu_452_p1;
        tmp_7_reg_539 <= {{p_Val2_s_phi_fu_278_p4[ap_const_lv32_F : ap_const_lv32_8]}};
        tmp_9_reg_544 <= {{p_Val2_s_phi_fu_278_p4[ap_const_lv32_17 : ap_const_lv32_10]}};
    end
end

/// assign process. ///
always @(posedge ap_clk)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(video_in_TVALID == ap_const_logic_0))) begin
        tmp_data_V_reg_487 <= video_in_TDATA;
        tmp_last_V_reg_495 <= video_in_TLAST;
    end
end

/// AXI_video_strm_V_data_V_2_ap_vld assign process. ///
always @ (exitcond1_fu_364_p2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond1_fu_364_p2 == ap_const_lv1_0))) begin
        AXI_video_strm_V_data_V_2_ap_vld = ap_const_logic_1;
    end else begin
        AXI_video_strm_V_data_V_2_ap_vld = ap_const_logic_0;
    end
end

/// ap_done assign process. ///
always @ (ap_done_reg or exitcond1_fu_364_p2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_done_reg) | ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond1_fu_364_p2 == ap_const_lv1_0)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

/// ap_idle assign process. ///
always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0)
begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

/// ap_ready assign process. ///
always @ (exitcond1_fu_364_p2 or ap_sig_cseq_ST_st4_fsm_3)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) & ~(exitcond1_fu_364_p2 == ap_const_lv1_0))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_pp1_stg0_fsm_4 assign process. ///
always @ (ap_sig_bdd_104)
begin
    if (ap_sig_bdd_104) begin
        ap_sig_cseq_ST_pp1_stg0_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_pp1_stg0_fsm_4 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st1_fsm_0 assign process. ///
always @ (ap_sig_bdd_26)
begin
    if (ap_sig_bdd_26) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st2_fsm_1 assign process. ///
always @ (ap_sig_bdd_79)
begin
    if (ap_sig_bdd_79) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st3_fsm_2 assign process. ///
always @ (ap_sig_bdd_173)
begin
    if (ap_sig_bdd_173) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st4_fsm_3 assign process. ///
always @ (ap_sig_bdd_93)
begin
    if (ap_sig_bdd_93) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st7_fsm_5 assign process. ///
always @ (ap_sig_bdd_141)
begin
    if (ap_sig_bdd_141) begin
        ap_sig_cseq_ST_st7_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_5 = ap_const_logic_0;
    end
end

/// ap_sig_cseq_ST_st8_fsm_6 assign process. ///
always @ (ap_sig_bdd_166)
begin
    if (ap_sig_bdd_166) begin
        ap_sig_cseq_ST_st8_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_6 = ap_const_logic_0;
    end
end

/// axi_data_V_1_phi_fu_220_p4 assign process. ///
always @ (axi_data_V_1_reg_217 or p_Val2_s_reg_274 or exitcond2_reg_516 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (exitcond2_reg_516 == ap_const_lv1_0))) begin
        axi_data_V_1_phi_fu_220_p4 = p_Val2_s_reg_274;
    end else begin
        axi_data_V_1_phi_fu_220_p4 = axi_data_V_1_reg_217;
    end
end

/// eol_1_phi_fu_209_p4 assign process. ///
always @ (eol_1_reg_206 or axi_last_V_2_reg_262 or exitcond2_reg_516 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (exitcond2_reg_516 == ap_const_lv1_0))) begin
        eol_1_phi_fu_209_p4 = axi_last_V_2_reg_262;
    end else begin
        eol_1_phi_fu_209_p4 = eol_1_reg_206;
    end
end

/// eol_2_phi_fu_290_p4 assign process. ///
always @ (video_in_TLAST or brmerge_fu_391_p2 or ap_reg_phiprechg_eol_2_reg_286pp1_it0 or axi_last_V_1_mux_fu_403_p2 or ap_sig_bdd_216)
begin
    if (ap_sig_bdd_216) begin
        if (~(ap_const_lv1_0 == brmerge_fu_391_p2)) begin
            eol_2_phi_fu_290_p4 = axi_last_V_1_mux_fu_403_p2;
        end else if ((ap_const_lv1_0 == brmerge_fu_391_p2)) begin
            eol_2_phi_fu_290_p4 = video_in_TLAST;
        end else begin
            eol_2_phi_fu_290_p4 = ap_reg_phiprechg_eol_2_reg_286pp1_it0;
        end
    end else begin
        eol_2_phi_fu_290_p4 = ap_reg_phiprechg_eol_2_reg_286pp1_it0;
    end
end

/// eol_phi_fu_254_p4 assign process. ///
always @ (eol_reg_250 or eol_2_reg_286 or exitcond2_reg_516 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (exitcond2_reg_516 == ap_const_lv1_0))) begin
        eol_phi_fu_254_p4 = eol_2_reg_286;
    end else begin
        eol_phi_fu_254_p4 = eol_reg_250;
    end
end

/// img_data_stream_0_V_ap_vld assign process. ///
always @ (exitcond2_reg_516 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_sig_bdd_112 or ap_reg_ppiten_pp1_it0 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & (exitcond2_reg_516 == ap_const_lv1_0))) begin
        img_data_stream_0_V_ap_vld = ap_const_logic_1;
    end else begin
        img_data_stream_0_V_ap_vld = ap_const_logic_0;
    end
end

/// img_data_stream_1_V_ap_vld assign process. ///
always @ (exitcond2_reg_516 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_sig_bdd_112 or ap_reg_ppiten_pp1_it0 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & (exitcond2_reg_516 == ap_const_lv1_0))) begin
        img_data_stream_1_V_ap_vld = ap_const_logic_1;
    end else begin
        img_data_stream_1_V_ap_vld = ap_const_logic_0;
    end
end

/// img_data_stream_2_V_ap_vld assign process. ///
always @ (exitcond2_reg_516 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_sig_bdd_112 or ap_reg_ppiten_pp1_it0 or ap_reg_ppiten_pp1_it1)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & (exitcond2_reg_516 == ap_const_lv1_0))) begin
        img_data_stream_2_V_ap_vld = ap_const_logic_1;
    end else begin
        img_data_stream_2_V_ap_vld = ap_const_logic_0;
    end
end

/// p_Val2_s_phi_fu_278_p4 assign process. ///
always @ (video_in_TDATA or brmerge_fu_391_p2 or axi_data_V_1_phi_fu_220_p4 or ap_reg_phiprechg_p_Val2_s_reg_274pp1_it0 or ap_sig_bdd_216)
begin
    if (ap_sig_bdd_216) begin
        if (~(ap_const_lv1_0 == brmerge_fu_391_p2)) begin
            p_Val2_s_phi_fu_278_p4 = axi_data_V_1_phi_fu_220_p4;
        end else if ((ap_const_lv1_0 == brmerge_fu_391_p2)) begin
            p_Val2_s_phi_fu_278_p4 = video_in_TDATA;
        end else begin
            p_Val2_s_phi_fu_278_p4 = ap_reg_phiprechg_p_Val2_s_reg_274pp1_it0;
        end
    end else begin
        p_Val2_s_phi_fu_278_p4 = ap_reg_phiprechg_p_Val2_s_reg_274pp1_it0;
    end
end

/// res_1_phi_fu_242_p4 assign process. ///
always @ (res_1_reg_239 or exitcond2_reg_516 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_reg_ppiten_pp1_it1 or res_2_reg_529)
begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it1) & (exitcond2_reg_516 == ap_const_lv1_0))) begin
        res_1_phi_fu_242_p4 = res_2_reg_529;
    end else begin
        res_1_phi_fu_242_p4 = res_1_reg_239;
    end
end

/// video_in_TREADY assign process. ///
always @ (video_in_TVALID or ap_sig_cseq_ST_st2_fsm_1 or exitcond2_fu_376_p2 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or brmerge_fu_391_p2 or ap_sig_bdd_112 or ap_reg_ppiten_pp1_it0 or ap_sig_cseq_ST_st7_fsm_5 or ap_sig_bdd_146 or eol_3_reg_333)
begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) & ~(video_in_TVALID == ap_const_logic_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_5) & (ap_const_lv1_0 == eol_3_reg_333) & ~ap_sig_bdd_146) | ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond2_fu_376_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == brmerge_fu_391_p2) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0))))) begin
        video_in_TREADY = ap_const_logic_1;
    end else begin
        video_in_TREADY = ap_const_logic_0;
    end
end
/// the next state (ap_NS_fsm) of the state machine. ///
always @ (ap_CS_fsm or video_in_TVALID or exitcond1_fu_364_p2 or exitcond2_fu_376_p2 or ap_sig_bdd_112 or ap_reg_ppiten_pp1_it0 or ap_sig_bdd_146 or eol_3_reg_333 or tmp_user_V_fu_355_p1 or ap_sig_bdd_335)
begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~ap_sig_bdd_335) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            if ((~(video_in_TVALID == ap_const_logic_0) & (ap_const_lv1_0 == tmp_user_V_fu_355_p1))) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else if ((~(video_in_TVALID == ap_const_logic_0) & ~(ap_const_lv1_0 == tmp_user_V_fu_355_p1))) begin
                ap_NS_fsm = ap_ST_st3_fsm_2;
            end else begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            if (~(exitcond1_fu_364_p2 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end
        end
        ap_ST_pp1_stg0_fsm_4 : 
        begin
            if (~((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & ~(exitcond2_fu_376_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end else if (((ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)) & ~(exitcond2_fu_376_p2 == ap_const_lv1_0))) begin
                ap_NS_fsm = ap_ST_st7_fsm_5;
            end else begin
                ap_NS_fsm = ap_ST_pp1_stg0_fsm_4;
            end
        end
        ap_ST_st7_fsm_5 : 
        begin
            if (((ap_const_lv1_0 == eol_3_reg_333) & ~ap_sig_bdd_146)) begin
                ap_NS_fsm = ap_ST_st7_fsm_5;
            end else if ((~ap_sig_bdd_146 & ~(ap_const_lv1_0 == eol_3_reg_333))) begin
                ap_NS_fsm = ap_ST_st8_fsm_6;
            end else begin
                ap_NS_fsm = ap_ST_st7_fsm_5;
            end
        end
        ap_ST_st8_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign AXI_video_strm_V_data_V_2 = res_reg_193;
assign ap_reg_phiprechg_axi_last_V_2_reg_262pp1_it0 = 'bx;
assign ap_reg_phiprechg_eol_2_reg_286pp1_it0 = 'bx;
assign ap_reg_phiprechg_p_Val2_s_reg_274pp1_it0 = 'bx;

/// ap_sig_bdd_104 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_104 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end

/// ap_sig_bdd_111 assign process. ///
always @ (exitcond2_fu_376_p2 or brmerge_fu_391_p2)
begin
    ap_sig_bdd_111 = ((exitcond2_fu_376_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == brmerge_fu_391_p2));
end

/// ap_sig_bdd_112 assign process. ///
always @ (video_in_TVALID or exitcond2_fu_376_p2 or brmerge_fu_391_p2)
begin
    ap_sig_bdd_112 = ((video_in_TVALID == ap_const_logic_0) & (exitcond2_fu_376_p2 == ap_const_lv1_0) & (ap_const_lv1_0 == brmerge_fu_391_p2));
end

/// ap_sig_bdd_124 assign process. ///
always @ (ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_sig_bdd_112 or ap_reg_ppiten_pp1_it0)
begin
    ap_sig_bdd_124 = ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0) & ~(ap_sig_bdd_112 & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0)));
end

/// ap_sig_bdd_141 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_141 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end

/// ap_sig_bdd_146 assign process. ///
always @ (video_in_TVALID or eol_3_reg_333)
begin
    ap_sig_bdd_146 = ((video_in_TVALID == ap_const_logic_0) & (ap_const_lv1_0 == eol_3_reg_333));
end

/// ap_sig_bdd_166 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_166 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

/// ap_sig_bdd_173 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_173 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end

/// ap_sig_bdd_200 assign process. ///
always @ (exitcond2_fu_376_p2 or brmerge_fu_391_p2)
begin
    ap_sig_bdd_200 = ((exitcond2_fu_376_p2 == ap_const_lv1_0) & ~(ap_const_lv1_0 == brmerge_fu_391_p2));
end

/// ap_sig_bdd_216 assign process. ///
always @ (exitcond2_fu_376_p2 or ap_sig_cseq_ST_pp1_stg0_fsm_4 or ap_reg_ppiten_pp1_it0)
begin
    ap_sig_bdd_216 = ((ap_const_logic_1 == ap_sig_cseq_ST_pp1_stg0_fsm_4) & (exitcond2_fu_376_p2 == ap_const_lv1_0) & (ap_const_logic_1 == ap_reg_ppiten_pp1_it0));
end

/// ap_sig_bdd_26 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_26 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end

/// ap_sig_bdd_335 assign process. ///
always @ (ap_start or ap_done_reg)
begin
    ap_sig_bdd_335 = ((ap_start == ap_const_logic_0) | (ap_done_reg == ap_const_logic_1));
end

/// ap_sig_bdd_79 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_79 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end

/// ap_sig_bdd_93 assign process. ///
always @ (ap_CS_fsm)
begin
    ap_sig_bdd_93 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end
assign axi_last_V_1_mux_fu_403_p2 = (eol_1_phi_fu_209_p4 | not_sof_2_fu_397_p2);
assign brmerge_fu_391_p2 = (sof_1_fu_112 | eol_phi_fu_254_p4);
assign exitcond1_fu_364_p2 = (p_s_reg_182 == ap_const_lv11_780? 1'b1: 1'b0);
assign exitcond2_fu_376_p2 = (p_1_reg_228 == ap_const_lv11_438? 1'b1: 1'b0);
assign i_V_fu_370_p2 = (p_s_reg_182 + ap_const_lv11_1);
assign img_data_stream_0_V_din = tmp_6_reg_534;
assign img_data_stream_0_V_write = ap_const_logic_0;
assign img_data_stream_1_V_din = tmp_7_reg_539;
assign img_data_stream_1_V_write = ap_const_logic_0;
assign img_data_stream_2_V_din = tmp_9_reg_544;
assign img_data_stream_2_V_write = ap_const_logic_0;
assign j_V_fu_382_p2 = (p_1_reg_228 + ap_const_lv11_1);
assign not_sof_2_fu_397_p2 = (sof_1_fu_112 ^ ap_const_lv1_1);
assign not_tmp_6_fu_410_p2 = (p_1_reg_228 != ap_const_lv11_437? 1'b1: 1'b0);
assign res_1_s_fu_436_p3 = {{tmp_5_fu_426_p4}, {tmp_8_fu_420_p2}};
assign res_2_fu_444_p3 = ((eol_2_phi_fu_290_p4)? res_1_s_fu_436_p3: res_1_phi_fu_242_p4);
assign res_4_fu_481_p2 = (res_3_reg_321 | ap_const_lv32_2);
assign tmp_4_fu_416_p1 = res_1_phi_fu_242_p4[0:0];
assign tmp_5_fu_426_p4 = {{res_1_phi_fu_242_p4[ap_const_lv32_1F : ap_const_lv32_1]}};
assign tmp_6_fu_452_p1 = p_Val2_s_phi_fu_278_p4[7:0];
assign tmp_8_fu_420_p2 = (tmp_4_fu_416_p1 | not_tmp_6_fu_410_p2);
assign tmp_user_V_fu_355_p1 = video_in_TUSER;


endmodule //sandbox_AXIvideo2Mat

