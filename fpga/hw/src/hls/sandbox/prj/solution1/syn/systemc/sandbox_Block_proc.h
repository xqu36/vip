// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _sandbox_Block_proc_HH_
#define _sandbox_Block_proc_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct sandbox_Block_proc : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > result;
    sc_out< sc_lv<16> > video_out_TDATA;
    sc_out< sc_logic > video_out_TVALID;
    sc_in< sc_logic > video_out_TREADY;
    sc_out< sc_lv<2> > video_out_TKEEP;
    sc_out< sc_lv<2> > video_out_TSTRB;
    sc_out< sc_lv<1> > video_out_TUSER;
    sc_out< sc_lv<1> > video_out_TLAST;
    sc_out< sc_lv<1> > video_out_TID;
    sc_out< sc_lv<1> > video_out_TDEST;


    // Module declarations
    sandbox_Block_proc(sc_module_name name);
    SC_HAS_PROCESS(sandbox_Block_proc);

    ~sandbox_Block_proc();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_23;
    sc_signal< sc_lv<9> > p_3_i_reg_160;
    sc_signal< sc_lv<1> > exitcond3_i_fu_177_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_49;
    sc_signal< sc_lv<10> > i_V_fu_183_p2;
    sc_signal< sc_lv<10> > i_V_reg_246;
    sc_signal< sc_lv<1> > exitcond4_i_fu_189_p2;
    sc_signal< sc_lv<1> > exitcond4_i_reg_251;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_2;
    sc_signal< bool > ap_sig_bdd_60;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_lv<8> > img_data_stream_0_V_assign_dout;
    sc_signal< sc_logic > img_data_stream_0_V_assign_empty_n;
    sc_signal< sc_lv<8> > img_data_stream_1_V_assign_dout;
    sc_signal< sc_logic > img_data_stream_1_V_assign_empty_n;
    sc_signal< bool > ap_sig_bdd_79;
    sc_signal< sc_logic > ap_sig_ioackin_video_out_TREADY;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_lv<9> > j_V_fu_195_p2;
    sc_signal< sc_lv<1> > axi_last_V_fu_201_p2;
    sc_signal< sc_lv<1> > axi_last_V_reg_260;
    sc_signal< sc_lv<10> > p_i_reg_149;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_3;
    sc_signal< bool > ap_sig_bdd_109;
    sc_signal< bool > ap_sig_bdd_115;
    sc_signal< sc_lv<1> > tmp_user_V_fu_92;
    sc_signal< sc_logic > ap_reg_ioackin_video_out_TREADY;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_st1_fsm_0;
    static const sc_lv<4> ap_ST_st2_fsm_1;
    static const sc_lv<4> ap_ST_pp0_stg0_fsm_2;
    static const sc_lv<4> ap_ST_st5_fsm_3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<10> ap_const_lv10_280;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<9> ap_const_lv9_1E0;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<9> ap_const_lv9_1DF;
    static const sc_lv<8> ap_const_lv8_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_109();
    void thread_ap_sig_bdd_115();
    void thread_ap_sig_bdd_23();
    void thread_ap_sig_bdd_49();
    void thread_ap_sig_bdd_60();
    void thread_ap_sig_bdd_79();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_2();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st5_fsm_3();
    void thread_ap_sig_ioackin_video_out_TREADY();
    void thread_axi_last_V_fu_201_p2();
    void thread_exitcond3_i_fu_177_p2();
    void thread_exitcond4_i_fu_189_p2();
    void thread_i_V_fu_183_p2();
    void thread_img_data_stream_0_V_assign_dout();
    void thread_img_data_stream_0_V_assign_empty_n();
    void thread_img_data_stream_1_V_assign_dout();
    void thread_img_data_stream_1_V_assign_empty_n();
    void thread_j_V_fu_195_p2();
    void thread_video_out_TDATA();
    void thread_video_out_TDEST();
    void thread_video_out_TID();
    void thread_video_out_TKEEP();
    void thread_video_out_TLAST();
    void thread_video_out_TSTRB();
    void thread_video_out_TUSER();
    void thread_video_out_TVALID();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
